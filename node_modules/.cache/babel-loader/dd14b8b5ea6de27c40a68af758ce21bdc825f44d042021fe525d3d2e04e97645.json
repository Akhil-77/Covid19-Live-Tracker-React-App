{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\advance web tech\\\\our project\\\\src\\\\util.js\",\n  _this = this;\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst casesTypeColors = {\n  cases: {\n    hex: \"#1d52d7\",\n    multiplier: 300\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    multiplier: 400\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    multiplier: 2000\n  }\n};\nexport const showDataOnMap = function (data) {\n  let casesType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"cases\";\n  return data.map(country => /*#__PURE__*/_jsxDEV(Circle, {\n    center: [country.countryInfo.lat, country.countryInfo.long],\n    color: casesTypeColors[casesType].hex,\n    fillColor: casesTypeColors[casesType].hex,\n    fillOpacity: 0.4,\n    radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-flag\",\n          style: {\n            backgroundImage: `url(${country.countryInfo.flag})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-name\",\n          children: country.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-confirmed\",\n          children: [\"Cases: \", numeral(country.cases).format(\"0,0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-recovered\",\n          children: [\"Recovered: \", numeral(country.recovered).format(\"0,0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-deaths\",\n          children: [\"Deaths: \", numeral(country.deaths).format(\"0,0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, _this));\n};\nexport const sortData = data => {\n  const sortedData = [...data];\n  return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\n};\nexport const prettyPrintStat = stat => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";","map":{"version":3,"names":["React","numeral","Circle","Popup","jsxDEV","_jsxDEV","casesTypeColors","cases","hex","multiplier","recovered","deaths","showDataOnMap","data","casesType","arguments","length","undefined","map","country","center","countryInfo","lat","long","color","fillColor","fillOpacity","radius","Math","sqrt","children","className","style","backgroundImage","flag","fileName","_jsxFileName","lineNumber","columnNumber","_this","format","sortData","sortedData","sort","a","b","prettyPrintStat","stat"],"sources":["C:/Users/Dell/OneDrive/Desktop/advance web tech/our project/src/util.js"],"sourcesContent":["import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n    cases: {\n        hex: \"#1d52d7\",\n        multiplier: 300,\n    },\n    recovered: {\n        hex: \"#7dd71d\",\n        multiplier: 400,\n    },\n    deaths: {\n        hex: \"#fb4443\",\n        multiplier: 2000,\n    },\n};\n\nexport const showDataOnMap = (data, casesType = \"cases\") => \n    data.map(country => (\n        <Circle\n            center={[country.countryInfo.lat, country.countryInfo.long]}\n            color={casesTypeColors[casesType].hex}\n            fillColor={casesTypeColors[casesType].hex}\n            fillOpacity={0.4}\n            radius={Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier}\n        >\n            <Popup>\n                <div className=\"info-container\">\n                    <div\n                        className=\"info-flag\"\n                        style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n                    ></div>\n                    <div className=\"info-name\">{country.country}</div>\n                    <div className=\"info-confirmed\">\n                        Cases: {numeral(country.cases).format(\"0,0\")}\n                    </div>\n                    <div className=\"info-recovered\">\n                        Recovered: {numeral(country.recovered).format(\"0,0\")}\n                    </div>\n                    <div className=\"info-deaths\">\n                        Deaths: {numeral(country.deaths).format(\"0,0\")}\n                    </div>\n                </div>\n            </Popup>\n        </Circle>\n    ))\n\n\n\nexport const sortData = (data) => {\n    const sortedData = [...data]\n    return sortedData.sort((a, b) =>  a.cases > b.cases ? -1 : 1)\n}\n\nexport const prettyPrintStat = (stat) => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}